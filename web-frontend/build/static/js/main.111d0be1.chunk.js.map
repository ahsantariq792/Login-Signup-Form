{"version":3,"sources":["components/Navbar.js","components/Signupform.js","components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","exact","to","axios","require","submit","values","console","log","post","name","email","then","res","data","validationSchema","yup","required","min","Signupform","formik","useFormik","initialValues","onSubmit","handleSubmit","TextField","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","Button","color","type","Loginform","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA6BeA,MApBf,WAGI,OACI,8BACI,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMC,UAAU,OAAOC,OAAK,EAACC,GAAG,IAAhC,sBAEJ,6BACI,cAAC,IAAD,CAAOF,UAAU,OAAOE,GAAG,SAA3B,6B,kCCdlBC,EAAQC,EAAQ,KAGhBC,EAAS,SAACC,GACdC,QAAQC,IAAI,SAAUF,GACtBH,EAAMM,KAAK,uCACX,CACEC,KAAMJ,EAAOI,KACbC,MAAOL,EAAOK,QAEfC,MAAK,SAAAC,GACJN,QAAQC,IAAIK,EAAIC,UAMdC,EAAmBC,IAAW,CAClCL,MAAOK,IACG,oBACPL,MAAM,uBACNM,SAAS,qBACZP,KAAMM,IACI,uBACPE,IAAI,EAAG,iDACPD,SAAS,sBA4JCE,MAvIf,WAEE,IAAMC,EAASC,YAAU,CACvBN,iBAAkBA,EAClBO,cAAe,CACbX,MAAO,GACPD,KAAM,IAGRa,SAAUlB,IAKZ,OACE,mCACE,qBAAKL,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,6CACA,uBAAMuB,SAAUH,EAAOI,aAAvB,UAEE,wDAEA,cAACC,EAAA,EAAD,CACEC,GAAG,iBACHhB,KAAK,OACLiB,MAAM,OACN3B,UAAU,MAEV4B,MAAOR,EAAOd,OAAOI,KACrBmB,SAAUT,EAAOU,aAGjBC,MAAOX,EAAOY,QAAQtB,MAAQuB,QAAQb,EAAOc,OAAOxB,MACpDyB,WAAYf,EAAOY,QAAQtB,MAAQU,EAAOc,OAAOxB,KAEjD0B,QAAQ,aAmBV,mDAGA,cAACX,EAAA,EAAD,CACEC,GAAG,iBACHhB,KAAK,QACLiB,MAAM,QACN3B,UAAU,MACV4B,MAAOR,EAAOd,OAAOK,MACrBkB,SAAUT,EAAOU,aAEjBC,MAAOX,EAAOY,QAAQrB,OAASsB,QAAQb,EAAOc,OAAOvB,OACrDwB,WAAYf,EAAOY,QAAQrB,OAASS,EAAOc,OAAOvB,MAGlDyB,QAAQ,aAuDV,cAACC,EAAA,EAAD,CAAQX,GAAG,MAAMU,QAAQ,YAAYE,MAAM,UAAUC,KAAK,SAA1D,+BC3KNpC,EAAQC,EAAQ,KAGhBC,EAAS,SAACC,GACdC,QAAQC,IAAI,SAAUF,GACtBH,EAAMM,KAAK,qCACX,CACEC,KAAMJ,EAAOI,KACbC,MAAOL,EAAOK,QAEfC,MAAK,SAAAC,GACJN,QAAQC,IAAIK,EAAIC,UAMdC,EAAmBC,IAAW,CAClCL,MAAOK,IACG,oBACPL,MAAM,uBACNM,SAAS,qBAKZP,KAAMM,IACI,uBACPE,IAAI,EAAG,iDACPD,SAAS,sBAgFCuB,MAnEf,WAEE,IAAMpB,EAASC,YAAU,CACvBN,iBAAkBA,EAClBO,cAAe,CACbX,MAAO,GACPD,KAAM,IAGRa,SAAUlB,IAKZ,OACE,mCACE,qBAAKL,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,4CACA,uBAAMuB,SAAUH,EAAOI,aAAvB,UAEE,wDAEA,cAACC,EAAA,EAAD,CACEC,GAAG,iBACHhB,KAAK,OACLiB,MAAM,OACN3B,UAAU,MAEV4B,MAAOR,EAAOd,OAAOI,KACrBmB,SAAUT,EAAOU,aAGjBC,MAAOX,EAAOY,QAAQtB,MAAQuB,QAAQb,EAAOc,OAAOxB,MACpDyB,WAAYf,EAAOY,QAAQtB,MAAQU,EAAOc,OAAOxB,KAEjD0B,QAAQ,aAIV,mDAGA,cAACX,EAAA,EAAD,CACEC,GAAG,iBACHhB,KAAK,QACLiB,MAAM,QACN3B,UAAU,MACV4B,MAAOR,EAAOd,OAAOK,MACrBkB,SAAUT,EAAOU,aAEjBC,MAAOX,EAAOY,QAAQrB,OAASsB,QAAQb,EAAOc,OAAOvB,OACrDwB,WAAYf,EAAOY,QAAQrB,OAASS,EAAOc,OAAOvB,MAGlDyB,QAAQ,aAEV,cAACC,EAAA,EAAD,CAAQX,GAAG,MAAMU,QAAQ,YAAYE,MAAM,UAAUC,KAAK,SAA1D,+B,QC1EGE,MArBf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WAIE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOzC,OAAK,EAACyC,KAAK,IAAlB,SACE,cAAC,EAAD,eCXGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.111d0be1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../App.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link className=\"item\" exact to=\"/\">Signup</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link  className=\"item\" to=\"/login\">Login</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Navbar;","import '../App.css';\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nconst axios = require('axios');\r\n\r\n\r\nconst submit = (values) => {\r\n  console.log(\"values\", values)\r\n  axios.post(\"http://localhost:5000/api/v1/profile\",\r\n  {\r\n    name: values.name,\r\n    email: values.email\r\n  })\r\n  .then(res => {\r\n    console.log(res.data);\r\n  })\r\n}\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  name: yup\r\n    .string('Enter your password')\r\n    .min(4, 'Name should be of minimum 4 characters length')\r\n    .required('Name is required'),\r\n\r\n\r\n  // age: yup\r\n  //   .number('Enter your age')\r\n  //   .positive('age should not be negative')\r\n  //   .min(10, 'age should more than 10 years')\r\n  //   .max(200, 'age should be less than 200 years')\r\n  //   .required('age is required'),\r\n\r\n  // password: yup\r\n  //   .string('Enter your password')\r\n  //   .min(8, 'Password should be of minimum 8 characters length')\r\n  //   .required('Password is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Signupform() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      name: '',\r\n     \r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"> \r\n        <div className=\"main\">\r\n          <h1>Signup Form</h1>\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Personal Information </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"name\"\r\n              label=\"name\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n\r\n            {/* <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"age\"\r\n              label=\"age\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.age}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.age && Boolean(formik.errors.age)}\r\n              helperText={formik.touched.age && formik.errors.age}\r\n\r\n              variant=\"outlined\" /> */}\r\n\r\n            <h3> Contact Details </h3>\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"box\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            {/* <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"phone\"\r\n              label=\"phone\"\r\n              className=\"box\"\r\n              value={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n              helperText={formik.touched.phone && formik.errors.phone}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <h3> Portfolio URL </h3>\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"website\"\r\n              label=\"url\"\r\n              className=\"box\"\r\n              value={formik.values.website}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.website && Boolean(formik.errors.website)}\r\n              helperText={formik.touched.website && formik.errors.website}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <h3> Account Password </h3>\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" /> */}\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signupform;","import '../App.css';\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nconst axios = require('axios');\r\n\r\n\r\nconst submit = (values) => {\r\n  console.log(\"values\", values)\r\n  axios.post(\"http://localhost:5000/api/v1/login\",\r\n  {\r\n    name: values.name,\r\n    email: values.email\r\n  })\r\n  .then(res => {\r\n    console.log(res.data);\r\n  })\r\n}\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  // password: yup\r\n  //   .string('Enter your password')\r\n  //   .min(8, 'Password should be of minimum 8 characters length')\r\n  //   .required('Password is required'),\r\n  name: yup\r\n    .string('Enter your password')\r\n    .min(4, 'Name should be of minimum 4 characters length')\r\n    .required('Name is required'),\r\n  // age: yup\r\n  //   .number('Enter your age')\r\n  //   .positive('age should not be negative')\r\n  //   .min(10, 'age should more than 10 years')\r\n  //   .max(200, 'age should be less than 200 years')\r\n  //   .required('age is required'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Loginform() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      name: '',\r\n     \r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"main\">\r\n          <h1>Login Form</h1>\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Personal Information </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"name\"\r\n              label=\"name\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n\r\n            <h3> Contact Details </h3>\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"box\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loginform;","import './App.css';\nimport Navbar from './components/Navbar';\nimport Signup from './components/Signupform';\nimport Login from './components/LoginForm';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          {/* <Route path=\"/signup\">\n            <Signup />\n          </Route> */}\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <Signup />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
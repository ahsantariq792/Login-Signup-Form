{"version":3,"sources":["components/Navbar.js","core.js","components/Signupform.js","components/LoginForm.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","exact","to","baseurl","window","location","hostname","split","submit","values","console","log","axios","post","name","email","phone","password","then","res","data","validationSchema","yup","required","min","matches","max","Signupform","formik","useFormik","initialValues","onSubmit","handleSubmit","TextField","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","type","Button","color","Loginform","history","useHistory","localStorage","setItem","setTimeout","push","Dashboard","getItem","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82124f40.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../App.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link className=\"item\" exact to=\"/\">Signup</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link  className=\"item\" to=\"/login\">Login</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Navbar;","const dev = \"http://localhost:5000\"\r\nexport const baseurl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import '../App.css';\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\nconst submit = (values) => {\r\n  console.log(\"values\", values)\r\n  axios.post(`${baseurl}/api/v1/signup`,\r\n  {\r\n    name: values.name,\r\n    email: values.email,\r\n    phone: values.phone,\r\n    password: values.password\r\n  \r\n  })\r\n  .then(res => {\r\n    console.log(res.data);\r\n  })\r\n}\r\n\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  name: yup\r\n    .string('Enter your password')\r\n    .min(4, 'Name should be of minimum 4 characters length')\r\n    .required('Name is required'),\r\n\r\n    phone: yup\r\n    .string('Enter your phone no.')\r\n    .matches(phoneRegExp, 'Phone number is not valid')\r\n    .min(11, 'Phone should contain 11 digits')\r\n    .max(11, 'Phone should contain 11 digits')\r\n    .required('phone number is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Signupform() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      name: '',\r\n      phone:'',\r\n      password: ''\r\n     \r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"> \r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Sign up Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"name\"\r\n              label=\"name\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"box\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"phone\"\r\n              label=\"phone\"\r\n              className=\"box\"\r\n              value={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n              helperText={formik.touched.phone && formik.errors.phone}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signupform;","import '../App.css';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Loginform() {\r\n\r\n  let history = useHistory();\r\n\r\n  const submit = (values) => {\r\n    console.log(\"values\", values)\r\n    axios.post(`${baseurl}/api/v1/login`,\r\n      {\r\n        email: values.email,\r\n        password: values.password\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        localStorage.setItem('name',res.data.name)\r\n\r\n        if (res.data.email) {\r\n          setTimeout(() => {\r\n          history.push(\"/dashboard\")\r\n            \r\n          }, 2000);\r\n        }\r\n\r\n        \r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n\r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Login Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"box\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loginform;","import React from 'react';\r\nimport \"../App.css\"\r\n\r\n\r\nfunction Dashboard(){\r\n    return(\r\n        <h1 id=\"wlm\">Welcome <span id=\"name\">{localStorage.getItem('name')}</span> </h1>\r\n    )\r\n}\r\nexport default Dashboard;","import './App.css';\nimport Navbar from './components/Navbar';\nimport Signup from './components/Signupform';\nimport Login from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/\">\n            <Signup />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}